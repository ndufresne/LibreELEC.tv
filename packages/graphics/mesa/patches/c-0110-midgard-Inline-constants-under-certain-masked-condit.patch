From 8d934d1d4107e529ecec27369bd070871968f374 Mon Sep 17 00:00:00 2001
From: Alyssa Rosenzweig <alyssa@rosenzweig.io>
Date: Sun, 11 Nov 2018 12:01:58 -0800
Subject: [PATCH 110/151] midgard: Inline constants under certain masked
 conditions

---
 src/gallium/drivers/panfrost/midgard/midgard_compile.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/gallium/drivers/panfrost/midgard/midgard_compile.c b/src/gallium/drivers/panfrost/midgard/midgard_compile.c
index bfd4ad7..7090931 100644
--- a/src/gallium/drivers/panfrost/midgard/midgard_compile.c
+++ b/src/gallium/drivers/panfrost/midgard/midgard_compile.c
@@ -2530,7 +2530,7 @@ embedded_to_inline_constant(compiler_context *ctx)
                         midgard_vector_alu_src *m = (midgard_vector_alu_src *) &q;
                         src = m;
 
-                        /* Component is from the swizzle, e.g. r26.w -> w component */
+                        /* Component is from the swizzle, e.g. r26.w -> w component. TODO: What if x is masked out? */
                         int component = src->swizzle & 3;
 
                         /* Scale constant appropriately, if we can legally */
@@ -2568,6 +2568,10 @@ embedded_to_inline_constant(compiler_context *ctx)
                         bool is_vector = false;
 
                         for (int c = 1; c < 4; ++c) {
+                                /* We only care if this component is actually used */
+                                if (ins->alu.mask & (1 << c))
+                                        continue;
+
                                 uint32_t test = cons[(src->swizzle >> (2 * c)) & 3];
 
                                 if (test != value) {
-- 
2.7.4

