From a2001c8af87bf83ece98f4a4daee948e5971e231 Mon Sep 17 00:00:00 2001
From: Alyssa Rosenzweig <alyssa@rosenzweig.io>
Date: Sat, 10 Nov 2018 21:49:13 -0800
Subject: [PATCH 105/151] blend: Handle saturation better

---
 src/gallium/drivers/panfrost/midgard/midgard_compile.c | 4 ++--
 src/gallium/drivers/panfrost/nir_lower_blend.c         | 9 ++++-----
 2 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/src/gallium/drivers/panfrost/midgard/midgard_compile.c b/src/gallium/drivers/panfrost/midgard/midgard_compile.c
index 7d128a2..47b9663 100644
--- a/src/gallium/drivers/panfrost/midgard/midgard_compile.c
+++ b/src/gallium/drivers/panfrost/midgard/midgard_compile.c
@@ -1161,7 +1161,7 @@ emit_intrinsic(compiler_context *ctx, nir_intrinsic_instr *instr)
                                 util_dynarray_append(ctx->current_block, midgard_instruction, u2f);
                                 midgard_insert_dummy(ctx);
 
-                                /* vmul.fmul r1, hr2, #0.00392151 */
+                                /* vmul.fmul.sat r1, hr2, #0.00392151 */
 
                                 alu_src.abs = false;
 
@@ -1179,7 +1179,7 @@ emit_intrinsic(compiler_context *ctx, nir_intrinsic_instr *instr)
                                                 .op = midgard_alu_op_fmul,
                                                 .reg_mode = midgard_reg_mode_full,
                                                 .dest_override = midgard_dest_override_none,
-                                                .outmod = midgard_outmod_none,
+                                                .outmod = midgard_outmod_sat,
                                                 .mask = 0xFF,
                                                 .src1 = vector_alu_srco_unsigned(alu_src),
                                                 .src2 = vector_alu_srco_unsigned(blank_alu_src),
diff --git a/src/gallium/drivers/panfrost/nir_lower_blend.c b/src/gallium/drivers/panfrost/nir_lower_blend.c
index 1a9abbe..d979a9f 100644
--- a/src/gallium/drivers/panfrost/nir_lower_blend.c
+++ b/src/gallium/drivers/panfrost/nir_lower_blend.c
@@ -34,7 +34,10 @@
  * fragment shaders; accordingly, they do not perform I/O to maximize
  * flexibility.
  *
- * TODO: sRGB, logic ops, integer blending, extended blending
+ * Inputs are assumed to be clamped to [0, 1]. fsat instructions must be added
+ * by the caller if clamping is not otherwise performed.
+ *
+ * TODO: sRGB, logic ops, integers, dual-source blending, advanced blending
  */
 
 /* src and dst are vec4 */
@@ -136,10 +139,6 @@ nir_per_channel_blending_f(const struct pipe_rt_blend_state *blend, nir_builder
                 return;
         }
 
-        /* Clamp the src color to [0, 1].  Dest is already clamped. */
-        for (int i = 0; i < 4; i++)
-                src_color[i] = nir_fsat(b, src_color[i]);
-
         nir_ssa_def *src_blend[4], *dst_blend[4];
         for (int i = 0; i < 4; i++) {
                 int src_factor = ((i != 3) ? blend->rgb_src_factor :
-- 
2.7.4

