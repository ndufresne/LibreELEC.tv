From 7cbbf108eb6ab965436d6dc429985930eaf2e41c Mon Sep 17 00:00:00 2001
From: Neil Armstrong <narmstrong@baylibre.com>
Date: Thu, 6 Dec 2018 14:18:57 +0100
Subject: [PATCH 140/151] winsys: Add linux meson drm winsys driver

---
 meson.build                                     |  3 +++
 src/gallium/winsys/meson/drm/meson_drm_winsys.c | 17 ++++++++++++++---
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/meson.build b/meson.build
index d392e60..219f839 100644
--- a/meson.build
+++ b/meson.build
@@ -201,6 +201,9 @@ if _vulkan_drivers.contains('auto')
           host_machine.system()))
   endif
 endif
+if (with_gallium_meson or with_gallium_rockchip) and not with_gallium_panfrost
+  error('meson/rockchip driver requires panfrost driver')
+endif
 
 with_intel_vk = _vulkan_drivers.contains('intel')
 with_amd_vk = _vulkan_drivers.contains('amd')
diff --git a/src/gallium/winsys/meson/drm/meson_drm_winsys.c b/src/gallium/winsys/meson/drm/meson_drm_winsys.c
index 02aa159..f2aecc7 100644
--- a/src/gallium/winsys/meson/drm/meson_drm_winsys.c
+++ b/src/gallium/winsys/meson/drm/meson_drm_winsys.c
@@ -26,6 +26,7 @@
 
 #include "meson_drm_public.h"
 #include "lima/drm/lima_drm_public.h"
+#include "panfrost/drm/panfrost_drm_public.h"
 #include "xf86drm.h"
 
 #include "pipe/p_screen.h"
@@ -34,15 +35,25 @@
 struct pipe_screen *meson_screen_create(int fd)
 {
    struct renderonly ro = {
-      /* Passes the lima-allocated BO through to the meson DRM device using
-       * PRIME buffer sharing.  The lima BO must be linear, which the SCANOUT
+      /* Passes the allocated BO through to the meson DRM device using
+       * PRIME buffer sharing.  The BO must be linear, which the SCANOUT
        * flag on allocation will have ensured.
        */
       .create_for_resource = renderonly_create_kms_dumb_buffer_for_resource,
       .kms_fd = fd,
-      .gpu_fd = drmOpenWithType("lima", NULL, DRM_NODE_RENDER),
    };
 
+   ro.gpu_fd = drmOpenWithType("lima", NULL, DRM_NODE_RENDER);
+   if (ro.gpu_fd < 0) {
+      ro.gpu_fd = open("/dev/mali0", O_RDWR | O_CLOEXEC);
+
+      struct pipe_screen *screen = panfrost_drm_screen_create_renderonly(&ro);
+      if (!screen)
+          close(ro.gpu_fd);
+
+      return screen;
+   }
+ 
    if (ro.gpu_fd < 0)
       return NULL;
 
-- 
2.7.4

