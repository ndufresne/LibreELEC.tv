From ff55dca8b5dbbc7174bb6deac06d8875826c3acd Mon Sep 17 00:00:00 2001
From: Erico Nunes <nunes.erico@gmail.com>
Date: Sun, 9 Dec 2018 23:09:35 +0100
Subject: [PATCH 067/151] lima: ppir: codegen: fix combine instruction
 dest_modifier

Without this fix, ppir codegen outputs instructions that always write to
the x component of the output register, so a simple shader like this
won't work:
  gl_FragColor = vec4(color.rg, sqrt(color.b*color.b), color.a);
It produces
  sqrt.s2 $0.x  $1.x
instead of
  sqrt.s2 $0.z  $1.x

Signed-off-by: Erico Nunes <nunes.erico@gmail.com>
---
 src/gallium/drivers/lima/ir/pp/codegen.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/gallium/drivers/lima/ir/pp/codegen.c b/src/gallium/drivers/lima/ir/pp/codegen.c
index 9868141..e0dd4da 100644
--- a/src/gallium/drivers/lima/ir/pp/codegen.c
+++ b/src/gallium/drivers/lima/ir/pp/codegen.c
@@ -421,7 +421,7 @@ static void ppir_codegen_encode_combine(ppir_node *node, void *code)
       int dest_component = ffs(dest->write_mask) - 1;
       assert(dest_component >= 0);
       f->scalar.dest = ppir_target_get_dest_reg_index(dest) + dest_component;
-      f->scalar.dest = dest->modifier;
+      f->scalar.dest_modifier = dest->modifier;
 
       ppir_src *src = alu->src;
       f->scalar.arg0_src = get_scl_reg_index(src, dest_component);
-- 
2.7.4

