From a406eddf457305284cad1f35ddd455e8bea849c1 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Sat, 8 Dec 2018 20:11:22 +0800
Subject: [PATCH 063/151] lima/ppir: fix load coord from const node crash v2

fragment shader from glamor:

precision mediump float;

varying vec2 glyph_pos;
uniform sampler2D sampler;
uniform sampler2D atlas;
void main() {
       vec4 mask = texture2D(atlas, glyph_pos);
       vec4 source = texture2D(sampler, vec2(0.5));
       gl_FragColor = source * mask.a;
}

v2:
  Solve in lower pass instead of node-to-instr pass.

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 src/gallium/drivers/lima/ir/pp/lower.c | 35 +++++++++++++++++++++++++++++++++-
 1 file changed, 34 insertions(+), 1 deletion(-)

diff --git a/src/gallium/drivers/lima/ir/pp/lower.c b/src/gallium/drivers/lima/ir/pp/lower.c
index 1b14cbd..fb05b14 100644
--- a/src/gallium/drivers/lima/ir/pp/lower.c
+++ b/src/gallium/drivers/lima/ir/pp/lower.c
@@ -29,8 +29,41 @@
 
 static bool ppir_lower_const(ppir_block *block, ppir_node *node)
 {
-   if (ppir_node_is_root(node))
+   if (ppir_node_is_root(node)) {
       ppir_node_delete(node);
+      return true;
+   }
+
+   ppir_node *move = NULL;
+   ppir_dest *dest = ppir_node_get_dest(node);
+
+   /* const (register) can only be used in alu node, create a move
+    * node for other types of node */
+   ppir_node_foreach_succ_safe(node, dep) {
+      ppir_node *succ = dep->succ;
+
+      if (succ->type != ppir_node_type_alu) {
+         if (!move) {
+            move = ppir_node_create(block, ppir_op_mov, -1, 0);
+            if (unlikely(!move))
+               return false;
+
+            ppir_debug("lower const create move %d for %d\n",
+                       move->index, node->index);
+
+            ppir_alu_node *alu = ppir_node_to_alu(move);
+            alu->dest = *dest;
+            alu->num_src = 1;
+            ppir_node_target_assign(alu->src, dest);
+            for (int i = 0; i < 4; i++)
+               alu->src->swizzle[i] = i;
+         }
+
+         ppir_node_replace_pred(dep, move);
+         ppir_node_replace_child(succ, node, move);
+      }
+   }
+
    return true;
 }
 
-- 
2.7.4

