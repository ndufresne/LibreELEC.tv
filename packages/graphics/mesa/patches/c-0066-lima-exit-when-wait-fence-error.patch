From 22166b948dafa7c22df1c6d7597255fb5c3bac87 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Thu, 6 Dec 2018 20:21:22 +0800
Subject: [PATCH 066/151] lima: exit when wait fence error

This help we know the last error draw and
get its command stream dump.

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 include/drm-uapi/lima_drm.h            |  4 ++--
 src/gallium/drivers/lima/lima_draw.c   | 11 ++++++++++-
 src/gallium/drivers/lima/lima_submit.c |  2 +-
 3 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/include/drm-uapi/lima_drm.h b/include/drm-uapi/lima_drm.h
index 0c17bf6..c44757b 100644
--- a/include/drm-uapi/lima_drm.h
+++ b/include/drm-uapi/lima_drm.h
@@ -137,7 +137,7 @@ struct drm_lima_wait_fence {
 	__u32 pipe;        /* in */
 	__u64 timeout_ns;  /* in */
 	__u32 seq;         /* in */
-	__u32 _pad;
+	__u32 error;       /* out */
 };
 
 #define LIMA_GEM_WAIT_READ   0x01
@@ -181,7 +181,7 @@ struct drm_lima_gem_mod {
 #define DRM_IOCTL_LIMA_GEM_INFO DRM_IOWR(DRM_COMMAND_BASE + DRM_LIMA_GEM_INFO, struct drm_lima_gem_info)
 #define DRM_IOCTL_LIMA_GEM_VA DRM_IOW(DRM_COMMAND_BASE + DRM_LIMA_GEM_VA, struct drm_lima_gem_va)
 #define DRM_IOCTL_LIMA_GEM_SUBMIT DRM_IOWR(DRM_COMMAND_BASE + DRM_LIMA_GEM_SUBMIT, union drm_lima_gem_submit)
-#define DRM_IOCTL_LIMA_WAIT_FENCE DRM_IOW(DRM_COMMAND_BASE + DRM_LIMA_WAIT_FENCE, struct drm_lima_wait_fence)
+#define DRM_IOCTL_LIMA_WAIT_FENCE DRM_IOWR(DRM_COMMAND_BASE + DRM_LIMA_WAIT_FENCE, struct drm_lima_wait_fence)
 #define DRM_IOCTL_LIMA_GEM_WAIT DRM_IOW(DRM_COMMAND_BASE + DRM_LIMA_GEM_WAIT, struct drm_lima_gem_wait)
 #define DRM_IOCTL_LIMA_CTX DRM_IOWR(DRM_COMMAND_BASE + DRM_LIMA_CTX, struct drm_lima_ctx)
 #define DRM_IOCTL_LIMA_GEM_MOD DRM_IOWR(DRM_COMMAND_BASE + DRM_LIMA_GEM_MOD, struct drm_lima_gem_mod)
diff --git a/src/gallium/drivers/lima/lima_draw.c b/src/gallium/drivers/lima/lima_draw.c
index 6c72044..4f542f9 100644
--- a/src/gallium/drivers/lima/lima_draw.c
+++ b/src/gallium/drivers/lima/lima_draw.c
@@ -1528,8 +1528,10 @@ _lima_flush(struct lima_context *ctx, bool end_of_frame)
             plb, LIMA_CTX_PLB_BLK_SIZE, false, "plb dump at va %x\n",
             ctx->plb[ctx->plb_index]->va);
       }
-      else
+      else {
          fprintf(stderr, "gp submit wait error\n");
+         exit(1);
+      }
    }
 
    struct lima_pp_stream_state *ps = &ctx->pp_stream;
@@ -1574,6 +1576,13 @@ _lima_flush(struct lima_context *ctx, bool end_of_frame)
          fprintf(stderr, "pp submit error\n");
    }
 
+   if (lima_dump_command_stream) {
+      if (!lima_submit_wait(ctx->pp_submit, PIPE_TIMEOUT_INFINITE)) {
+         fprintf(stderr, "pp wait error\n");
+         exit(1);
+      }
+   }
+
    ctx->plb_index = (ctx->plb_index + 1) % lima_ctx_num_plb;
 
    /* this surface may need reload when next draw if not end of frame */
diff --git a/src/gallium/drivers/lima/lima_submit.c b/src/gallium/drivers/lima/lima_submit.c
index 499c917..461f1a7 100644
--- a/src/gallium/drivers/lima/lima_submit.c
+++ b/src/gallium/drivers/lima/lima_submit.c
@@ -196,7 +196,7 @@ bool lima_submit_wait(struct lima_submit *submit, uint64_t timeout_ns)
       .ctx = submit->ctx,
    };
 
-   bool ret = drmIoctl(submit->screen->fd, DRM_IOCTL_LIMA_WAIT_FENCE, &req) == 0;
+   bool ret = drmIoctl(submit->screen->fd, DRM_IOCTL_LIMA_WAIT_FENCE, &req) == 0 && !req.error;
    if (ret) {
       list_for_each_entry_safe(struct lima_submit_job, j,
                                &submit->busy_job_list, list) {
-- 
2.7.4

