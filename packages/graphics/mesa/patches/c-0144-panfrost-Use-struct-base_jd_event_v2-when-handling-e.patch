From 1d1b3b708e807db7daf3647d153508cceb238023 Mon Sep 17 00:00:00 2001
From: Tomeu Vizoso <tomeu.vizoso@collabora.com>
Date: Mon, 10 Dec 2018 14:44:38 +0100
Subject: [PATCH 144/151] panfrost: Use struct base_jd_event_v2 when handling
 events

Signed-off-by: Tomeu Vizoso <tomeu.vizoso@collabora.com>
---
 src/gallium/drivers/panfrost/pan_context.c | 21 ++++++++++++++-------
 1 file changed, 14 insertions(+), 7 deletions(-)

diff --git a/src/gallium/drivers/panfrost/pan_context.c b/src/gallium/drivers/panfrost/pan_context.c
index f105283..cf49698 100644
--- a/src/gallium/drivers/panfrost/pan_context.c
+++ b/src/gallium/drivers/panfrost/pan_context.c
@@ -23,6 +23,7 @@
  */
 
 #include <sys/poll.h>
+#include <errno.h>
 #include <panfrost-mali-base.h>
 #include <mali-kbase-ioctl.h>
 
@@ -1413,16 +1414,22 @@ force_flush_fragment(struct panfrost_context *ctx)
 {
         struct pipe_context *gallium = (struct pipe_context *) ctx;
         struct panfrost_screen *screen = panfrost_screen(gallium->screen);
-
-        last_fragment_flushed = true;
-        return;
+        struct base_jd_event_v2 event;
+        int ret;
 
         if (!last_fragment_flushed) {
-                uint8_t ev[/* 1 */ 4 + 4 + 8 + 8];
-
                 do {
-                        read(screen->fd, ev, sizeof(ev));
-                } while (ev[4] != last_fragment_id);
+                        ret = read(screen->fd, &event, sizeof(event));
+                        if (ret != sizeof(event)) {
+                            fprintf(stderr, "error when reading from mali device: %s\n", strerror(errno));
+                            break;
+                        }
+
+                        if (event.event_code == BASE_JD_EVENT_JOB_INVALID) {
+                            fprintf(stderr, "Job invalid\n");
+                            break;
+                        }
+                } while (event.atom_number != last_fragment_id);
 
                 last_fragment_flushed = true;
         }
-- 
2.7.4

